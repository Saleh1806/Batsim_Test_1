image: oarteam/batsim_ci

variables:
  GIT_SUBMODULE_STRATEGY: none

stages:
  - big_stage
  - deploy

###############################################################################
# Do most tasks
###############################################################################
build_and_test:
  stage: big_stage
  script:
    # Build batsched
    - nix-shell --pure ./release.nix -A batsched --command ${CI_PROJECT_DIR}/ci/list-store-paths-for-cachix.bash | cachix push batsim
    - nix-build ./release.nix -A batsched
    # Test against pinned batsim
    - nix-shell --pure ./release.nix -A integration_tests --command ${CI_PROJECT_DIR}/ci/list-store-paths-for-cachix.bash | cachix push batsim
    - nix-build ./release.nix -A integration_tests && cp -rL result ./integration_tests
    # Test against up-to-date batsim
    - nix-shell --pure ./release.nix -A integration_tests_batlatest --command ${CI_PROJECT_DIR}/ci/list-store-paths-for-cachix.bash | cachix push batsim
    - nix-build ./release.nix -A integration_tests_batlatest && cp -rL result ./integration_tests_batlatest
    # Fail job if tests failed
    - if [[ "$(cat ./integration_tests/pytest_returncode)" -ne 0 ]] ; then echo "pytest returned non-zero (against pinned batsim), aborting" ; exit 1 ; fi
    - if [[ "$(cat ./integration_tests_batlatest/pytest_returncode)" -ne 0 ]] ; then echo "pytest returned non-zero (against latest batsim), aborting" ; exit 1 ; fi
  artifacts:
    paths:
      - /builds/batsim/batsched/cover

###############################################################################
# Deploy stage
###############################################################################
deploy_coverage:
  stage: deploy
  script:
      - echo "Disabled for now."
      - exit 1
      # Pushes Batsim's code doc (doxygen) onto the gforge website.
      # SSH setup (do NOT run these commands on your machine)
      - eval $(ssh-agent -s)
      - echo "$SSH_PRIVATE_KEY" | tr -d ' ' | base64 --decode | ssh-add -
      - mkdir -p ~/.ssh
      - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" >> ~/.ssh/config'
      # Finally push the code documentation on the gforge website
      - rsync -rlgoDz --delete cover/html/ mpoquet@scm.gforge.inria.fr:/home/groups/batsim/htdocs/batsched/coverage
  dependencies:
    - build_and_test
  only:
    - master
  allow_failure: true
