base_output_directory: /tmp/no_redis

base_variables:
    test_dir: ${base_working_directory}/test

implicit_instances:
  # Algorithms without parameters
  noparam:
    sweep:
      platform :
        - {"name":"homo128", "filename":"${test_dir}/platforms/energy_platform_homogeneous_no_net_128.xml"}
      workload :
        - {"name":"hello", "filename":"${test_dir}/workloads/hello.json"}
        - {"name":"medium_late", "filename":"${test_dir}/workloads/medium_late.json"}
      algo:
        - {"name":"easy_bf", "sched_name":"easy_bf"}
        - {"name":"filler", "sched_name":"filler"}
        - {"name":"conservative_bf", "sched_name":"conservative_bf"}
        - {"name":"killer", "sched_name":"killer"}
      redis_enabled: ["false"]
    generic_instance:
      timeout: 3600
      working_directory: ${base_working_directory}
      output_directory: ${base_output_directory}/results/${instance_id}
      batsim_command: batsim -p ${platform[filename]} -w ${workload[filename]} -E -e ${output_directory}/out --mmax-workload --config-file ${output_directory}/batsim.conf -vdebug
      sched_command: batsched -v ${algo[sched_name]}
      commands_before_execution:
        # Generate Batsim config file
        - |
              #!/bin/bash
              cat > ${output_directory}/batsim.conf << EOF
              {
                "redis": {
                  "enabled": ${redis_enabled}
                },
                "job_submission": {
                  "forward_profiles": true
                }
              }
              EOF

  inertial_shutdown:
    sweep:
      platform :
        - {"name":"homo128", "filename":"${test_dir}/platforms/energy_platform_homogeneous_no_net_128.xml"}
      workload :
        - {"name":"hello", "filename":"${test_dir}/workloads/hello.json"}
        - {"name":"medium_late", "filename":"${test_dir}/workloads/medium_late.json"}
      algo:
        - {"name":"inertial_shutdown", "sched_name":"energy_bf_monitoring_inertial"}
      monitoring_period: [60, 600]
      needed_time_to_sedate: [0e1, 60e1, 1e18]
      sedate_idle_on_classical_events: ["true", "false"]
      inertial_alteration: ["p2", "x2"]
      up_llh_threshold: [0e4, 10e4]
      ensured_sleep_bounds:
        - {"name":"zero", "lower": 0e1, "upper": 0e1}
        - {"name":"T", "lower": 0e1, "upper": 1e18}
      redis_enabled: ["false"]
    generic_instance:
      timeout: 3600
      working_directory: ${base_working_directory}
      output_directory: ${base_output_directory}/results/${instance_id}
      batsim_command: batsim -p ${platform[filename]} -w ${workload[filename]} -E -e ${output_directory}/out --mmax-workload -vnetwork-only --config-file ${output_directory}/batsim.conf
      sched_command: batsched -v ${algo[sched_name]} --variant_options_filepath ${output_directory}/sched_input.json
      commands_before_execution:
        # Generate Batsim config file
        - |
              #!/bin/bash
              cat > ${output_directory}/batsim.conf << EOF
              {
                "redis": {
                  "enabled": ${redis_enabled}
                },
                "job_submission": {
                  "forward_profiles": true
                }
              }
              EOF
        # Generate sched options
        - |
            #!/bin/bash
            # Since bash associative arrays are not exported, the variables.bash
            # is sourced here.
            source ${output_directory}/variables.bash

            # Let's generate an input file for the scheduler
            cat > ${output_directory}/sched_input.json << EOF
            {
              "output_dir":"${output_directory}",
              "trace_output_filename":"${output_directory}/sched_load_log.csv",

              "inertial_alteration":"${inertial_alteration}",
              "upper_llh_threshold":${up_llh_threshold},
              "monitoring_period":${monitoring_period},
              "idle_time_to_sedate":${needed_time_to_sedate},
              "sedate_idle_on_classical_events":${sedate_idle_on_classical_events},

              "ensured_sleep_time_lower_bound":${ensured_sleep_bounds[lower]},
              "ensured_sleep_time_upper_bound":${ensured_sleep_bounds[upper]},

              "power_sleep":9.75,
              "power_idle":95,
              "energy_switch_on":19030,
              "power_compute":190.738,
              "energy_switch_off":620,
              "time_switch_off":6.1,
              "pstate_sleep":13,
              "pstate_compute":0,
              "time_switch_on":152
            }
            EOF
